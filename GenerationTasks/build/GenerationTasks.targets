<?xml version="1.0" encoding="utf-8" standalone="no"?>
<Project>
  <ItemDefinitionGroup>
    <CurrentServiceProjectReference>
      <NSwagDocumentGeneratorOptions />
      <ProjectConfiguration />
    </CurrentServiceProjectReference>
    <CurrentServiceFileReference>
      <NSwagCSharpCodeGeneratorOptions />
      <NSwagTypeScriptCodeGeneratorOptions />
    </CurrentServiceFileReference>
  </ItemDefinitionGroup>

  <!-- ServiceProjectReference support -->

  <Target Name="NSwagDocumentGenerator">
    <ItemGroup>
      <!-- @(CurrentServiceProjectReference) item group will never contain more than one item. -->
      <CurrentServiceProjectReference Update="@(CurrentServiceProjectReference)">
        <Command>$(NSwagExe_Core21) aspnetcore2swagger /NoBuild:true /output:%(DocumentPath) /Project:%(FullPath)</Command>
        <NSwagDocumentGeneratorOptions
            Condition="'%(NSwagDocumentGeneratorOptions)' == ''">$(NSwagDocumentGeneratorDefaultOptions)</NSwagDocumentGeneratorOptions>
        <ProjectConfiguration
            Condition="'%(ProjectConfiguration)' == ''">$(Configuration)</ProjectConfiguration>
      </CurrentServiceProjectReference>
      <CurrentServiceProjectReference Update="@(CurrentServiceProjectReference)">
        <Command>%(Command) /Configuration:%(ProjectConfiguration) /TargetFramework:%(ProjectTargetFramework)</Command>
      </CurrentServiceProjectReference>
      <CurrentServiceProjectReference Update="@(CurrentServiceProjectReference)">
        <Command>%(Command) %(NSwagDocumentGeneratorOptions)</Command>
      </CurrentServiceProjectReference>
    </ItemGroup>

    <Message Importance="high" Text="%0ANSwagDocumentGenerator:" />
    <Message Importance="high" Text="  %(CurrentServiceProjectReference.Command)" />
    <Exec Command="%(CurrentServiceProjectReference.Command)"
        IgnoreExitCode="$([System.IO.File]::Exists('%(DocumentPath)'))" />
  </Target>

  <!-- ServiceFileReference support for C# -->

  <Target Name="NSwagCSharpCodeGenerator">
    <ItemGroup>
      <!-- @(CurrentServiceFileReference) item group will never contain more than one item. -->
      <CurrentServiceFileReference Update="@(CurrentServiceFileReference)">
        <Command>$(NSwagExe_Core21) swagger2csclient /className:%(ClassName) /namespace:%(Namespace)</Command>
        <NSwagCSharpCodeGeneratorOptions
            Condition="'%(NSwagCSharpCodeGeneratorOptions)' == ''">$(NSwagCSharpCodeGeneratorDefaultOptions)</NSwagCSharpCodeGeneratorOptions>
      </CurrentServiceFileReference>
      <CurrentServiceFileReference Update="@(CurrentServiceFileReference)">
        <Command>%(Command) /input:%(FullPath) /output:%(OutputPath) %(NSwagCSharpCodeGeneratorOptions)</Command>
      </CurrentServiceFileReference>
    </ItemGroup>

    <Message Importance="high" Text="%0ANSwagCSharpCodeGenerator:" />
    <Message Importance="high" Text="  %(CurrentServiceFileReference.Command)" />
    <Exec Command="%(CurrentServiceFileReference.Command)"
        IgnoreExitCode="$([System.IO.File]::Exists('%(OutputPath)'))" />
  </Target>

  <!-- ServiceFileReference support for TypeScript -->

  <Target Name="NSwagTypeScriptCodeGenerator">
    <ItemGroup>
      <!-- @(CurrentServiceFileReference) item group will never contain more than one item. -->
      <CurrentServiceFileReference Update="@(CurrentServiceFileReference)">
        <Command>$(NSwagExe_Core21) swagger2tsclient /className:%(ClassName) /namespace:%(Namespace)</Command>
        <NSwagTypeScriptCodeGeneratorOptions
            Condition="'%(NSwagTypeScriptCodeGeneratorOptions)' == ''">$(NSwagTypeScriptCodeGeneratorDefaultOptions)</NSwagTypeScriptCodeGeneratorOptions>
      </CurrentServiceFileReference>
      <CurrentServiceFileReference Update="@(CurrentServiceFileReference)">
        <Command>%(Command) /input:%(FullPath) /output:%(OutputPath) %(NSwagTypeScriptCodeGeneratorOptions)</Command>
      </CurrentServiceFileReference>
    </ItemGroup>

    <Message Importance="high" Text="%0ANSwagTypeScriptCodeGenerator:" />
    <Message Importance="high" Text="  %(CurrentServiceFileReference.Command)" />
    <Exec Command="%(CurrentServiceFileReference.Command)"
        IgnoreExitCode="$([System.IO.File]::Exists('%(OutputPath)'))" />
  </Target>
</Project>
